{"ast":null,"code":"var _jsxFileName = \"/Users/waqar.a/Documents/MyStuff/Int/Companies/CDL/assesment/cdl-checkout-app/src/components/products/lineItems.js\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LineItem extends React.Component {\n  render() {\n    const {\n      product\n    } = this.props.product;\n    const {\n      setQuantity\n    } = this.setQuantity;\n    const {\n      item,\n      unitPrice,\n      offer\n    } = product;\n    const [productQuantity, updateProductQuantity] = useState(0);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        \"display\": \"flex\",\n        \"justify-content\": \"space-between\",\n        \"flex-direction\": \"column\",\n        \"width\": \"200px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Price: \", unitPrice, \" (GBP)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          \"display\": \"block\",\n          \"align-items\": \"center\",\n          \"color\": \"red\",\n          \"font-weight\": \"bold\",\n          \"width\": \"200px\"\n        },\n        children: [offer ? `Offer:  ${offer.quantity} for ${offer.specialPrice}` : \"\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          min: \"0\",\n          placeholder: productQuantity,\n          onChange: e => updateProductQuantity(e.target.value > 0 ? Number(e.target.value) : 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            \"display\": \"flex\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-primary\",\n            onClick: () => setQuantity(item, productQuantity),\n            children: \"Add to Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n/*const LineItem = ({ product, setQuantity }) => {\n  \n  const { item, unitPrice, offer } = product;\n\n  const [productQuantity, updateProductQuantity] = useState(0);\n\n  return (\n    <div style={{ \"display\": \"flex\", \"justify-content\": \"space-between\", \"flex-direction\": \"column\", \"width\": \"200px\" }}>\n      <h2>{item}</h2>\n      <p>Price: {unitPrice} (GBP)</p>\n\n      <div style={{ \"display\": \"block\", \"align-items\": \"center\", \"color\": \"red\", \"font-weight\": \"bold\", \"width\": \"200px\" }}>\n        {offer\n          ? `Offer:  ${offer.quantity} for ${offer.specialPrice}` : \"\"}\n\n        <input type=\"text\" min=\"0\" placeholder={productQuantity}\n          onChange={(e) => updateProductQuantity(e.target.value > 0 ? Number(e.target.value) : 0)}\n        />\n\n\n        <div style={{ \"display\": \"flex\" }}>\n          <button className=\"btn btn-outline-primary\" onClick={() => setQuantity(item, productQuantity)}>\n            Add to Cart\n          </button>\n        </div>\n\n      </div>\n    </div>\n  );\n};\n*/\n\n\nexport default LineItem;","map":{"version":3,"sources":["/Users/waqar.a/Documents/MyStuff/Int/Companies/CDL/assesment/cdl-checkout-app/src/components/products/lineItems.js"],"names":["React","useState","LineItem","Component","render","product","props","setQuantity","item","unitPrice","offer","productQuantity","updateProductQuantity","quantity","specialPrice","e","target","value","Number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AAErCC,EAAAA,MAAM,GAAG;AAEP,UAAM;AAACC,MAAAA;AAAD,QAAY,KAAKC,KAAL,CAAWD,OAA7B;AAEA,UAAM;AAACE,MAAAA;AAAD,QAAgB,KAAKA,WAA3B;AAGA,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,SAAR;AAAmBC,MAAAA;AAAnB,QAA6BL,OAAnC;AAEA,UAAM,CAACM,eAAD,EAAkBC,qBAAlB,IAA2CX,QAAQ,CAAC,CAAD,CAAzD;AAEA,wBACE;AAAK,MAAA,KAAK,EAAE;AAAE,mBAAW,MAAb;AAAqB,2BAAmB,eAAxC;AAAyD,0BAAkB,QAA3E;AAAqF,iBAAS;AAA9F,OAAZ;AAAA,8BACE;AAAA,kBAAKO;AAAL;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,8BAAWC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE;AAAK,QAAA,KAAK,EAAE;AAAE,qBAAW,OAAb;AAAsB,yBAAe,QAArC;AAA+C,mBAAS,KAAxD;AAA+D,yBAAe,MAA9E;AAAsF,mBAAS;AAA/F,SAAZ;AAAA,mBACGC,KAAK,GACD,WAAUA,KAAK,CAACG,QAAS,QAAOH,KAAK,CAACI,YAAa,EADlD,GACsD,EAF9D,eAIE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,GAAG,EAAC,GAAvB;AAA2B,UAAA,WAAW,EAAEH,eAAxC;AACE,UAAA,QAAQ,EAAGI,CAAD,IAAOH,qBAAqB,CAACG,CAAC,CAACC,MAAF,CAASC,KAAT,GAAiB,CAAjB,GAAqBC,MAAM,CAACH,CAAC,CAACC,MAAF,CAASC,KAAV,CAA3B,GAA8C,CAA/C;AADxC;AAAA;AAAA;AAAA;AAAA,gBAJF,eASE;AAAK,UAAA,KAAK,EAAE;AAAE,uBAAW;AAAb,WAAZ;AAAA,iCACE;AAAQ,YAAA,SAAS,EAAC,yBAAlB;AAA4C,YAAA,OAAO,EAAE,MAAMV,WAAW,CAACC,IAAD,EAAOG,eAAP,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AApCoC;AAwCvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeT,QAAf","sourcesContent":["import React, { useState } from \"react\";\n\nclass LineItem extends React.Component {\n\n  render() {\n\n    const {product} = this.props.product;\n\n    const {setQuantity} = this.setQuantity;\n    \n\n    const { item, unitPrice, offer } = product;\n\n    const [productQuantity, updateProductQuantity] = useState(0);\n\n    return (\n      <div style={{ \"display\": \"flex\", \"justify-content\": \"space-between\", \"flex-direction\": \"column\", \"width\": \"200px\" }}>\n        <h2>{item}</h2>\n        <p>Price: {unitPrice} (GBP)</p>\n\n        <div style={{ \"display\": \"block\", \"align-items\": \"center\", \"color\": \"red\", \"font-weight\": \"bold\", \"width\": \"200px\" }}>\n          {offer\n            ? `Offer:  ${offer.quantity} for ${offer.specialPrice}` : \"\"}\n\n          <input type=\"text\" min=\"0\" placeholder={productQuantity}\n            onChange={(e) => updateProductQuantity(e.target.value > 0 ? Number(e.target.value) : 0)}\n          />\n\n\n          <div style={{ \"display\": \"flex\" }}>\n            <button className=\"btn btn-outline-primary\" onClick={() => setQuantity(item, productQuantity)}>\n              Add to Cart\n            </button>\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n\n}\n\n/*const LineItem = ({ product, setQuantity }) => {\n  \n  const { item, unitPrice, offer } = product;\n\n  const [productQuantity, updateProductQuantity] = useState(0);\n\n  return (\n    <div style={{ \"display\": \"flex\", \"justify-content\": \"space-between\", \"flex-direction\": \"column\", \"width\": \"200px\" }}>\n      <h2>{item}</h2>\n      <p>Price: {unitPrice} (GBP)</p>\n\n      <div style={{ \"display\": \"block\", \"align-items\": \"center\", \"color\": \"red\", \"font-weight\": \"bold\", \"width\": \"200px\" }}>\n        {offer\n          ? `Offer:  ${offer.quantity} for ${offer.specialPrice}` : \"\"}\n\n        <input type=\"text\" min=\"0\" placeholder={productQuantity}\n          onChange={(e) => updateProductQuantity(e.target.value > 0 ? Number(e.target.value) : 0)}\n        />\n\n\n        <div style={{ \"display\": \"flex\" }}>\n          <button className=\"btn btn-outline-primary\" onClick={() => setQuantity(item, productQuantity)}>\n            Add to Cart\n          </button>\n        </div>\n\n      </div>\n    </div>\n  );\n};\n*/\nexport default LineItem;\n"]},"metadata":{},"sourceType":"module"}